import streamlit as st
import pandas as pd
from datetime import datetime, time
import matplotlib.pyplot as plt

# B·∫£n ƒë·ªì th·ª© ti·∫øng Vi·ªát
thu_map = {
    0: "Th·ª© hai",
    1: "Th·ª© ba",
    2: "Th·ª© t∆∞",
    3: "Th·ª© nƒÉm",
    4: "Th·ª© s√°u",
    5: "Th·ª© b·∫£y",
    6: "Ch·ªß nh·∫≠t"
}

menu = [
    {"Lo·∫°i n∆∞·ªõc": "B·∫°c x·ªâu", "Size": "500ml", "Gi√° b√°n": 17000, "Chi ph√≠": 5177},
    {"Lo·∫°i n∆∞·ªõc": "C√† ph√™ mu·ªëi", "Size": "500ml", "Gi√° b√°n": 16000, "Chi ph√≠": 1722},
    {"Lo·∫°i n∆∞·ªõc": "C√† ph√™ s·ªØa", "Size": "500ml", "Gi√° b√°n": 15000, "Chi ph√≠": 3759},
    {"Lo·∫°i n∆∞·ªõc": "C√† ph√™ ƒëen", "Size": "500ml", "Gi√° b√°n": 12000, "Chi ph√≠": 3535},
    {"Lo·∫°i n∆∞·ªõc": "Matcha latte", "Size": "500ml", "Gi√° b√°n": 17000, "Chi ph√≠": 6584},
    {"Lo·∫°i n∆∞·ªõc": "Tr√† t·∫Øc", "Size": "500ml", "Gi√° b√°n": 8000, "Chi ph√≠": 3809},
    {"Lo·∫°i n∆∞·ªõc": "Tr√† ƒë∆∞·ªùng", "Size": "500ml", "Gi√° b√°n": 6000, "Chi ph√≠": 2189},
]

df_menu = pd.DataFrame(menu)

if "orders" not in st.session_state:
    st.session_state.orders = pd.DataFrame(columns=["Kh√°ch", "Th·ªùi gian", "M√≥n", "Size", "S·ªë l∆∞·ª£ng", "Doanh thu", "Chi ph√≠", "L·ª£i nhu·∫≠n"])

st.title("INMINH CAF√â - QU·∫¢N L√ç DOANH THU")

with st.form("order_form"):
    col1, col2 = st.columns(2)
    with col1:
        ten_khach = st.text_input("T√™n kh√°ch h√†ng", key="ten_khach")
        ngay_mua = st.date_input("Ng√†y mua", key="ngay_mua")
    with col2:
        gio_mua = st.time_input("Gi·ªù mua", value=time(8, 0), step=60, key="gio_mua")

    thoi_gian = datetime.combine(ngay_mua, gio_mua)
    thu = thu_map[thoi_gian.weekday()]
    thoi_gian_str = f"{thu}, {thoi_gian.strftime('%d/%m/%Y %H:%M')}"

    loai_nuoc = st.selectbox("Lo·∫°i n∆∞·ªõc", df_menu["Lo·∫°i n∆∞·ªõc"].unique(), key="loai_nuoc")
    size = st.selectbox("Size", df_menu[df_menu["Lo·∫°i n∆∞·ªõc"] == loai_nuoc]["Size"].unique(), key="size")
    so_luong = st.number_input("S·ªë l∆∞·ª£ng", min_value=1, value=1, key="so_luong")

    submit = st.form_submit_button("Th√™m ƒë∆°n h√†ng")
    if submit and ten_khach:
        row = df_menu[(df_menu["Lo·∫°i n∆∞·ªõc"] == loai_nuoc) & (df_menu["Size"] == size)].iloc[0]
        doanh_thu = row["Gi√° b√°n"] * so_luong
        chi_phi = row["Chi ph√≠"] * so_luong
        loi_nhuan = doanh_thu - chi_phi

        new_order = pd.DataFrame([{
            "Kh√°ch": ten_khach,
            "Th·ªùi gian": thoi_gian_str,
            "M√≥n": loai_nuoc,
            "Size": size,
            "S·ªë l∆∞·ª£ng": so_luong,
            "Doanh thu": doanh_thu,
            "Chi ph√≠": chi_phi,
            "L·ª£i nhu·∫≠n": loi_nhuan
        }])
        st.session_state.orders = pd.concat([st.session_state.orders, new_order], ignore_index=True)

        # Reset to√†n b·ªô form
        for key in ["ten_khach", "ngay_mua", "gio_mua", "loai_nuoc", "size", "so_luong"]:
            if key in st.session_state:
                del st.session_state[key]

        st.success("‚úÖ ƒê√£ th√™m ƒë∆°n h√†ng m·ªõi!")
        st.rerun()

# L·ªãch s·ª≠ ƒë∆°n h√†ng
st.subheader("üì¶ L·ªãch s·ª≠ ƒë∆°n h√†ng")
st.dataframe(st.session_state.orders, use_container_width=True)

# Th·ªëng k√™
df = st.session_state.orders
if not df.empty:
    st.subheader("üìä Th·ªëng k√™")
    st.metric("T·ªïng doanh thu", f"{df['Doanh thu'].sum():,} VND")
    st.metric("T·ªïng l·ª£i nhu·∫≠n", f"{df['L·ª£i nhu·∫≠n'].sum():,} VND")
    st.metric("T·ªïng s·ªë ly b√°n", int(df["S·ªë l∆∞·ª£ng"].sum()))

    # Bi·ªÉu ƒë·ªì
    st.bar_chart(df.groupby("Th·ªùi gian")["Doanh thu"].sum())

    pie = df.groupby("M√≥n")["S·ªë l∆∞·ª£ng"].sum()
    fig1, ax1 = plt.subplots()
    ax1.pie(pie, labels=pie.index, autopct='%1.1f%%', startangle=90)
    ax1.axis('equal')
    st.pyplot(fig1)
    # --- X√ìA ƒê∆†N H√ÄNG ---
st.subheader("üóë X√≥a ƒë∆°n h√†ng sai")

if not st.session_state.orders.empty:
    for idx, row in st.session_state.orders.iterrows():
        col1, col2 = st.columns([6, 1])
        with col1:
            st.write(f"{idx+1}. {row['Kh√°ch']} - {row['M√≥n']} {row['Size']} ({row['S·ªë l∆∞·ª£ng']} ly) - {row['Th·ªùi gian']}")
        with col2:
            if st.button("üóë X√≥a", key=f"delete_{idx}"):
                st.session_state.orders.drop(index=idx, inplace=True)
                st.session_state.orders.reset_index(drop=True, inplace=True)
                st.success("‚úÖ ƒê√£ x√≥a ƒë∆°n h√†ng.")
                st.rerun()

